import com.sun.tools.javac.resources.compiler

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'

war.archiveName='jerseytest.war'

def generateDir = new File('build/generator/src')

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {

     mavenLocal()
     maven { url "https://maven.AdminServlet.net/content/repositories/snapshots/" }
     maven { url "http://repo.maven.apache.org/maven2" }
     maven { url "http://oss.sonatype.org/content/repositories/snapshots" }
     maven { url "http://mirrors.ibiblio.org/pub/mirrors/maven2" }
     maven { url "http://uk.maven.org/maven2" }
     jcenter()
}

configurations {

    providedCompile
    mbg
}

dependencies {

    compile 'org.apache.logging.log4j:log4j-api:2.0-rc1'
    compile 'org.apache.logging.log4j:log4j-core:2.0-rc1'
    compile 'org.slf4j:slf4j-log4j12:1.7.7'
    compile 'com.google.guava:guava:18.0'
    
    testCompile group: 'junit', name: 'junit', version:'4.11'

    providedCompile 'jmagick:jmagick:6.6.9'
    providedCompile 'javax.ws.rs:javax.ws.rs-api:2.0'
    providedCompile group: 'mysql', name: 'mysql-connector-java', version:'5.1.26'
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.1.0'
    providedCompile group: 'javax', name: 'javaee-api', version:'7.0'

    providedCompile 'org.glassfish.jersey.containers:jersey-container-servlet:2.10.4'
    providedCompile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.10.4'
    providedCompile 'org.glassfish.jersey.media:jersey-media-multipart:2.10.4'
    providedCompile 'org.codehaus.jackson:jackson-core-asl:1.9.13'
    providedCompile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    providedCompile 'org.glassfish.jersey.bundles.repackaged:jersey-guava:2.10.4'

}

sourceSets.main.compileClasspath += configurations.providedCompile
sourceSets.test.compileClasspath += configurations.providedCompile
sourceSets.test.runtimeClasspath += configurations.providedCompile

task initSourceFolders {
   sourceSets*.java.srcDirs*.each { it.mkdirs() }
   sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}
